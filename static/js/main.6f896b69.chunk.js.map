{"version":3,"sources":["StonksGuyIcon.png","Components/NavBar/NavBar.js","Components/Charts/HomeChart/HomeChart.js","Components/Charts/HomeChart/HomeChartContainer.js","Components/Gainers/Table.js","Components/Gainers/Gainers.js","Components/Losers/Table.js","Components/Losers/Losers.js","Components/News/News.js","config/iex.js","Components/ListOfCompanies/FetchCompanies.js","Components/ListOfCompanies/ListOfCompanies.js","Components/Watchlist/Form.js","Components/Watchlist/EachStock.js","Components/Watchlist/Stocks.js","Components/Watchlist/Watchlist.js","WebPages/HomePage/HomePage.js","Components/ResearchHeader/ResearchHeader.js","Components/Charts/BalanceSheetChart/BalanceSheetChart.js","Components/Charts/BalanceSheetChart/BalanceSheetChartContainer.js","Components/Charts/CashFlowChart/CashFlowChart.js","Components/Charts/CashFlowChart/CashFlowChartContainer.js","Components/Charts/IncomeStatementChart/IncomeStatementChart.js","Components/Charts/IncomeStatementChart/IncomeStatementChartContainer.js","WebPages/ResearchPage/ResearchPageFinancials.js","Components/Charts/EPSChart/EPSChart.js","Components/Charts/EPSChart/EPSChartContainer.js","WebPages/ResearchPage/ResearchPageStats.js","NotStocksGuy.png","Components/Charts/DividendsChart/DividendsChart.js","Components/Charts/DividendsChart/DividendsChartContainer.js","WebPages/ResearchPage/ResearchPageDividends.js","Components/Charts/PriceChart/PriceChart.js","Components/Charts/PriceChart/PriceChartContainer.js","Components/Charts/PriceChart/PriceChartInfo.js","WebPages/ResearchPage/ResearchPagePriceChart.js","Components/CompanyOverview/CompanyOverview.js","Components/CompanyNews/CompanyNews.js","WebPages/ResearchPage/ResearchPageCompanyOverview.js","WebPages/ResearchPage/Form.js","WebPages/ResearchPage/ResearchPage.js","Components/InvestingTerms/InvestingTermCard.js","WebPages/LearnPage/LearnPage.js","utils/setAuthToken.js","actions/types.js","actions/authActions.js","stonks-drawn.png","WebPages/AccountPage/AccountPage.js","WebPages/LoginPage/Login.js","WebPages/SignUpPage/SignUp.js","Components/PrivateRoute/PrivateRoute.js","Components/SideNav/SideNav.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","href","alt","src","logo","this","props","auth","isAuthenticated","user","name","split","Component","connect","state","HomepageChart","numberWithCommas","x","toString","replace","backgroundColor","chartHeader","price","priceChange","percentChange","i","month","chartxLabels","data","Number","date","slice","close","toFixed","labels","datasets","label","borderColor","fill","borderWidth","pointHoverRadius","options","responsive","maintainAspectRatio","aspectRatio","elements","point","radius","legend","display","tooltips","mode","callbacks","tooltipItem","datasetIndex","yLabel","hover","intersect","scales","xAxes","gridLines","ticks","autoSkip","maxTicksLimit","callback","value","yAxes","color","zeroLineColor","drawBorder","height","width","HomeGraph","tickerSymbol","prices","isLoaded","baseURL","token","fetch","then","response","json","setState","HomeChart","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Styles","styled","div","Gainers","useMemo","Header","accessor","useState","setData","useEffect","a","axios","get","transformRequest","common","result","Losers","News","isloaded","newsArray","qmUrl","image","headline","iex","api_token","base_url","FetchCompanies","ticker","url","symbol","marketCap","latestPrice","change","ListOfCompanies","Form","getStock","onSubmit","type","placeholder","EachStock","stock","onClick","handleRemove","style","Stocks","stockName","console","log","onStockRemove","myStocks","stockList","key","WatchList","e","target","preventDefault","concat","onStockRemoveHandler","currState","index","indexOf","splice","searchStock","HomePage","window","location","pathname","ResearchHeader","million","billion","trillion","quadrillion","marketcap","marketcapLabel","BalanceSheetChart","currentAssetsData","currentAssetsBackgroundColor","cashData","cashBackgroundColor","longTermDebtData","longTermDebtBackgroundColor","totalCurrentLiabilitiesData","totalCurrentLiabilitiesBackgroundColor","balancesheet","fiscalYear","fiscalQuarter","currentAssets","currentCash","longTermDebt","currentLongTermDebt","absyLabel","Math","abs","round","absValue","BalanceSheetChartContainer","balanceSheet","setBalance","setLoaded","sandboxMode","balanceSheetURL","milliseconds","Date","now","currentDate","sleep","CashFlowChart","netIncomeData","netIncomeBackgroundColor","capitalExpendituresData","capitalExpendituresBackgroundColor","cashFlowData","cashFlowBackgroundColor","dividendsPaidData","dividendsPaidBackgroundColor","cashFlow","cashflow","netIncome","capitalExpenditures","dividendsPaid","CashFlowChartContainer","setCashFlow","cashFlowURL","IncomeStatementChart","revenueData","operatingExpenses","operatingIncomeData","grossProfitData","revenueBackgroundColor","operatingExpensesBackgroundColor","grossProfitBackgroundColor","operatingIncomeBackgroundColor","income","totalRevenue","operatingExpense","operatingIncome","grossProfit","IncomeStatementChartContainer","incomeStatement","incomeStatementURL","ResearchPageFinancials","React","memo","EPSChart","thousand","sharesOutstandingData","EPSData","EPSDataBackgroundColor","sharesOutstanding","EPSChartContainer","shares","ResearchPageStats","stats","setStats","setIncome","isLoaded1","setLoaded1","isLoaded2","setLoaded2","keyStats","keyStatsURL","statsResult","incomeResult","DividendsChart","DividendData","DividendDataBackgroundColor","maxValue","dividends","length","paymentDate","amount","beginAtZero","suggestedMax","DividendsChartContainer","NotStonksGuy","ResearchPageDividends","PriceChart","PriceChartContainer","setPrices","pricesURL","pricesResult","PriceChartInfo","keyStat","advStats","advStatsURL","forwardPERatio","peRatio","profitMargin","beta","dividendYeild","dividendYield","nextDividendDate","nextEarningsDate","ResearchPagePriceChart","CompanyOverview","companyName","setLogo","companyInfo","setCompanyInfo","company","logoURL","companyInfoURL","logoResult","companyInfoResult","website","description","CEO","industry","address","city","zip","employees","CompanyNews","companyNews","ResearchPageCompanyOverview","ResearchPage","toUpperCase","prevProps","prevState","priceURL","nextState","to","from","path","component","InvestingTermCard","isOpen","setIsOpen","parentRef","useRef","ref","current","scrollHeight","children","LearnPage","setAuthToken","defaults","GET_ERRORS","USER_LOADING","SET_CURRENT_USER","setCurrentUser","decoded","payload","logoutUser","dispatch","localStorage","removeItem","AccountPage","onLogoutClick","fontFamily","drawing","borderRadius","letterSpacing","marginTop","Login","onChange","id","userData","email","password","loginUser","errors","history","push","nextProps","noValidate","htmlFor","error","classnames","invalid","emailnotfound","passwordincorrect","post","res","setItem","JSON","stringify","jwt_decode","catch","err","SignUp","newUser","password2","registerUser","withRouter","rest","SideNav","event","exact","isEmpty","require","initialState","loading","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","jwtToken","parse","currentTime","exp","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f896b69.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/StonksGuyIcon.290e97ec.png\";","import React from \"react\";\nimport { Component } from \"react\";\nimport logo from '../../StonksGuyIcon.png';\nimport './NavBar.css';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass NavBar extends Component {\n    \n    render() {\n        return (\n            <div className=\"nav-bar-container\">\n                \n                <div className=\"nav-bar-container-item\"></div>\n                <div className=\"nav-bar-container-item\">\n                    \n                        <a className=\"nav-bar-link\" href=\"/HomePage\">\n                            <img className=\"nav-bar-home-icon\" alt=\"\" src={logo} />  WallStreet Stonks\n                        </a>\n                </div>\n\n                <div className=\"nav-bar-container-item\">\n                    <h2 className=\"welcome-message\">\n                        {(this.props.auth.isAuthenticated)? \n                        `Hi, ${this.props.auth.user.name.split(\" \")[0]}` \n                        : \"Welcome!\" }\n                    </h2>\n                </div>\n            </div>\n        )\n    }\n    \n}\n\n\n\nNavBar.propTypes = {\n    \n    auth: PropTypes.object.isRequired\n  };\n  const mapStateToProps = state => ({\n    auth: state.auth\n  });\n  export default connect(\n    mapStateToProps\n  )(NavBar);\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\n// // FOR TESTING\n// const testdata = {\n//     labels: ['1', '2', '3', '4', '5', '6'],\n//     datasets: [\n//       {\n//         label: '# of Votes',\n//         data: [12, 19, 3, 5, 2, 3],\n//         fill: false,\n//         backgroundColor: 'rgb(255, 99, 132)',\n//         borderColor: 'rgba(255, 99, 132, 0.2)',\n//       },\n//     ],\n//   };\n  \n//   const options = {\n//     scales: {\n//       yAxes: [\n//         {\n//           ticks: {\n//             beginAtZero: true,\n//           },\n//         },\n//       ],\n//     },\n//   };\n\n\nconst HomepageChart = (props) => {\n\n    function numberWithCommas(x) {\n        return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    var month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    var chartxLabels = [{}]\n    var data = [{}]\n    var backgroundColor\n    var chartHeader\n    var price\n    var priceChange\n    var percentChange\n\n    const daysIn5Years = 5 * 365 + 2\n    var i\n    for (i = 0; i < daysIn5Years; i++) {\n        if (typeof props.data[i] === 'undefined') {\n            break;\n        }\n        chartxLabels[i] = month[Number((props.data[i].date).slice(5, 7)) - 1] + \" \" + Number((props.data[i].date).slice(8, 10)) + \", \" + (props.data[i].date).slice(0, 4)\n        data[i] = props.data[i].close\n    }\n\n    if (props.data[i - 1].close >= props.data[0].close) {\n        backgroundColor = 'rgba(33, 206, 153, 1)'\n        price = numberWithCommas(props.data[i - 1].close)\n        priceChange = numberWithCommas((props.data[i - 1].close - props.data[0].close).toFixed(2))\n        percentChange = numberWithCommas(((props.data[i - 1].close / props.data[0].close * 10000) / 100 - 100).toFixed(2))\n        chartHeader = <div className=\"green\">\n            <h2>SPY S&P 500 ETF</h2>\n            <h6>${price}</h6>\n            <h6>+${priceChange} (+{percentChange}%)</h6>\n        </div>\n    } else {\n        backgroundColor = 'rgba(244, 84, 48, 1)'\n        price = numberWithCommas(props.data[i - 1].close)\n        priceChange = numberWithCommas((props.data[0].close - props.data[i - 1].close).toFixed(2))\n        percentChange = numberWithCommas(((props.data[0].close / props.data[i - 1].close * 10000) / 100 - 100).toFixed(2))\n        chartHeader = <div className=\"red\">\n            <h2>SPY S&P 500 ETF</h2>\n            <h5>${price}</h5>\n            <h6>-${priceChange} (-{percentChange}%)</h6>\n        </div>\n    }\n\n    return (\n        <div className=\"chart\">\n            {chartHeader}\n            <Line\n                data={{\n                    labels: chartxLabels,\n                    datasets: [\n                        {\n                            label: \"Price\",\n                            data: data,\n                            borderColor: backgroundColor,\n                            backgroundColor: backgroundColor,\n                            fill: false,\n                            borderWidth: 1,\n                            pointHoverRadius: 2\n                        },\n                    ]\n                }}\n                options={{\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    aspectRatio: 5,\n                    elements: {\n                        point: {\n                            radius: 0\n                        }\n                    },\n                    legend: {\n                        display: false\n                    },\n                    tooltips: {\n                        mode: 'x-axis',\n                        callbacks: {\n                            label: function (tooltipItem, data) {\n                                var label = data.datasets[tooltipItem.datasetIndex].label || '';\n                                label += ': $' + tooltipItem.yLabel;\n                                return label;\n                            }\n                        }\n                    },\n                    hover: {\n                        mode: 'index',\n                        intersect: false,\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display: false\n                            },\n                            ticks: {\n                                display: true,\n                                autoSkip: true,\n                                maxTicksLimit: 16,\n                                callback: function (value) {\n                                    return value.slice(0, 4) + value.slice(7, 12)\n                                }\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display: true,\n                                color: '#181818',\n                                zeroLineColor: '#181818',\n                                drawBorder: false,\n                            },\n                            ticks: {\n                                callback: function (value) {\n                                    return '$ ' + value\n                                }\n                            }\n                        }]\n                    }\n                }}\n                height={null}\n                width={null}\n            />\n        </div>\n    )\n}\n\n\nexport default HomepageChart;","import React, { Component } from 'react';\nimport './HomeChartContainer.css';\nimport HomeChart from './HomeChart.js';\n\n\nclass HomeGraph extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tickerSymbol: 'SPY',\n            prices: [{}],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        var sandboxMode = true\n        var baseURL\n        var token\n        var range = '5y'\n        const prices = `/stock/${this.state.tickerSymbol}/chart/${range}/?token=`\n\n        if (sandboxMode) {\n            baseURL = 'https://sandbox.iexapis.com/v1'\n            token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n        }\n        else {\n            baseURL = 'https://cloud.iexapis.com/v1'\n            token = 'pk_2d87808402a3463ab504dac6eb52b540'\n        }\n\n        const pricesURL = baseURL + prices + token\n\n        fetch(pricesURL)\n            .then(response => response.json())\n            .then(data => this.setState({ prices: data, isLoaded: true }))\n\n    }\n    render() {\n        return (\n            this.state.isLoaded ?\n                <div className=\"home-chart-container\">\n                    <div className=\"home-chart\">\n                        <HomeChart data={this.state.prices}/>\n                    </div>\n                </div>\n                :\n                <div>\n                    <div className=\"home-chart-container\">\n                        <div className=\"home-chart\">\n                            <h1>Loading...</h1>\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}\n\n\nexport default HomeGraph;","import React from 'react'\nimport { useTable } from 'react-table'\n\nfunction Table({ columns, data }) {\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({ columns, data })\n\n    // Render Data Table UI\n    return (\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup\n                            .headers\n                            .map(column => (\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                            ))}\n                    </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row);\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row\n                                .cells\n                                .map(cell => {\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table;","import React, { useState, useEffect, useMemo } from \"react\";\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Table from './Table.js';\nimport './Gainers.css';\n\nconst Styles = styled.div`\n  table {\n    width: 100%;\n    border-spacing: 0;\n    border: 1px solid black;\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n    th,\n    td {\n      font-size: .8em;\n      margin: 0;\n      padding: .5rem;\n      border-bottom: 1px solid black;\n      text-align: right;\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\n\nfunction Gainers() {\n\n\n    const columns = useMemo(\n        () => [\n            {\n                Header: 'TICKER',\n                accessor: 'symbol'\n            }\n            , {\n                Header: 'PRICE',\n                accessor: 'latestPrice'\n            }\n            , {\n                Header: 'CHANGE',\n                accessor: 'change'\n            }\n            , {\n                Header: 'PERCENT',\n                accessor: 'changePercent'\n            }\n        ]\n    )\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        (async () => {\n            const result = await axios.get(\"https://cloud.iexapis.com/stable/stock/market/list/gainers?token=pk_2d87808402a3463ab504dac6eb52b540&listLimit=5\" , {transformRequest: (data, headers) => {\n              delete headers.common['Authorization'];\n            }\n          });\n            setData(result.data);\n        })();\n    }, []);\n\n    return (\n        <div className=\"gainers-container\">\n            <h3>Today's Biggest Gainers</h3>\n            <Styles>\n                <Table\n                    data={data}\n                    columns={columns}\n                />\n            </Styles>\n        </div>\n    )\n}\n\nexport default Gainers;","import React from 'react'\nimport { useTable } from 'react-table'\n\nfunction Table({ columns, data }) {\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({ columns, data })\n\n    // Render Data Table UI\n    return (\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup\n                            .headers\n                            .map(column => (\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                            ))}\n                    </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row);\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row\n                                .cells\n                                .map(cell => {\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table;","import React, { useState, useEffect, useMemo } from \"react\";\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Table from './Table.js';\nimport './Losers.css';\n\nconst Styles = styled.div`\ntable {\n  width: 100%;\n  border-spacing: 0;\n  border: 1px solid black;\n  tr {\n    :last-child {\n      td {\n        border-bottom: 0;\n      }\n    }\n  }\n  th,\n  td {\n    font-size: .8em;\n    margin: 0;\n    padding: .5rem;\n    border-bottom: 1px solid black;\n    text-align: right;\n    :last-child {\n      border-right: 0;\n    }\n  }\n}\n`\n\n\nfunction Losers() {\n    const columns = useMemo(\n        () => [\n            {\n                Header: 'TICKER',\n                accessor: 'symbol'\n            }\n            , {\n                Header: 'PRICE',\n                accessor: 'latestPrice'\n            }\n            , {\n                Header: 'CHANGE',\n                accessor: 'change'\n            }\n            , {\n                Header: 'PERCENT',\n                accessor: 'changePercent'\n            }\n        ]\n    )\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        (async () => {\n            const result = await axios(\"https://cloud.iexapis.com/stable/stock/market/list/losers?token=pk_2d87808402a3463ab504dac6eb52b540&listLimit=5\" , {transformRequest: (data, headers) => {\n                delete headers.common['Authorization'];\n              }\n            });\n            setData(result.data);\n        })();\n    }, []);\n\n    return (\n        <div className=\"losers-container\" >\n            <h3>Today's Biggest Losers</h3>\n            <Styles>\n                <Table\n                    data={data}\n                    columns={columns}\n                />\n            </Styles>\n        </div>\n    )\n}\n\nexport default Losers;","import React, { Component } from 'react';\nimport './News.css';\n\nclass News extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isloaded: false,\n            newsArray: [{}]\n\n        }\n    }\n    componentDidMount() {\n        var sandboxMode = true\n        var baseURL\n        var token\n        const keyStats = '/time-series/news/?range=last-week&limit=5&token='\n\n        if (sandboxMode) {\n            baseURL = 'https://sandbox.iexapis.com/v1'\n            token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n        }\n        else {\n            baseURL = 'https://cloud.iexapis.com/v1'\n            token = 'pk_2d87808402a3463ab504dac6eb52b540'\n        }\n\n        const keyStatsURL = baseURL + keyStats + token\n\n        fetch(keyStatsURL)\n            .then(response => response.json())\n            .then(data => this.setState({ newsArray: data, isLoaded: true }))\n\n    }\n\n    render() {\n        return (\n            this.state.isLoaded ?\n                <div className=\"news-container\">\n                    <h3>Todays News</h3>\n                    <a className=\"news-link\" alt=\"\" href={this.state.newsArray[0].qmUrl}>\n                        <img className=\"news-img\" src={this.state.newsArray[0].image}></img>\n                    <p className=\"\">{this.state.newsArray[0].headline}</p>\n                    </a>\n                    <a className=\"news-link\" alt=\"\" href={this.state.newsArray[1].qmUrl}>\n                        <img className=\"news-img\" src={this.state.newsArray[1].image}></img>\n                        <p className=\"\">{this.state.newsArray[1].headline}</p>\n                    </a>\n                    <a className=\"news-link\" alt=\"\" href={this.state.newsArray[2].qmUrl}>\n                        <img className=\"news-img\" src={this.state.newsArray[2].image}></img>\n                        <p className=\"\">{this.state.newsArray[2].headline}</p>\n                    </a>\n                    <a className=\"news-link\" alt=\"\" href={this.state.newsArray[3].qmUrl}>\n                        <img className=\"news-img\" src={this.state.newsArray[3].image}></img>\n                        <p className=\"\">{this.state.newsArray[3].headline}</p>\n                    </a>\n                    <a className=\"news-link\" alt=\"\" href={this.state.newsArray[4].qmUrl}>\n                        <img className=\"news-img\" src={this.state.newsArray[4].image}></img>\n                        <p className=\"\">{this.state.newsArray[4].headline}</p>\n                    </a>\n                </div>\n                :\n                <div className=\"news-container\">\n                    <h4>Loading...</h4>\n                </div>\n        );\n    }\n\n}\n\n\nexport default News;\n","const iex = {\n    api_token: 'pk_2d87808402a3463ab504dac6eb52b540',\n    base_url: 'https://cloud.iexapis.com/stable'\n};\nexport default iex;","import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport iex from '../../config/iex.js'\n\nfunction FetchCompanies({ ticker }) {\n\n    const [data, setData] = useState(ticker);\n    useEffect(() => {\n        (async () => {\n            const url = `${iex.base_url}/stock/${ticker}/quote?token=${iex.api_token}`\n            const result = await axios.get(url , {transformRequest: (data, headers) => {\n                delete headers.common['Authorization'];\n              }\n            });\n            setData(result.data);\n        })();\n    }, []);\n\n    return (\n        <tr>\n            <td>{data.symbol}</td>\n            <td>{data.marketCap}</td>\n            <td>${data.latestPrice}</td>\n            <td>{data.change}</td>\n\n        </tr>\n\n    );\n\n};\n\n\nexport default FetchCompanies;","import React from 'react';\nimport FetchCompanies from './FetchCompanies.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './ListOfCompanies.css';\n\n\nfunction ListOfCompanies() {\n    return (\n        <div className=\"Example\">\n            \n            <div className=\"list-of-companies-container\">\n                <h3>Top Market Cap Companies</h3>\n                <table className=\"table mt-5\">\n                    <thead>\n                    <tr>\n                            <th>Ticker</th>\n                            <th>Market Cap</th>\n                            <th>Price </th>\n                            <th>Change +/-</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        <FetchCompanies ticker=\"aapl\" />\n                        <FetchCompanies ticker=\"msft\" />\n                        <FetchCompanies ticker=\"amzn\" />\n                        <FetchCompanies ticker=\"goog\" />\n                        <FetchCompanies ticker=\"fb\" />\n                        <FetchCompanies ticker=\"v\" />\n                        <FetchCompanies ticker=\"tsla\" />\n                        <FetchCompanies ticker=\"tsm\" />\n                        <FetchCompanies ticker=\"baba\" />\n                        <FetchCompanies ticker=\"brk.b\" />\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n        )\n}\nexport default ListOfCompanies;","import React from 'react';\n\nconst Form = ({ getStock }) => (\n    <div className=\"add-to-watchlist\">\n        <form onSubmit={getStock}>\n            <input className=\"form_inputs\" type=\"text\" name=\"stockName\" placeholder=\"Enter Ticker\" />\n            <button className=\"form_buttons\"> Add </button>\n        </form>\n    </div>    \n);\n\nexport default Form;","import React, { Component } from 'react';\nimport \"./EachStock.css\"\n\nclass EachStock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stock: []\n        };\n    }\n\n    render() {\n        return (\n            <div className='eachStock'>\n                {this.props.stock && (\n                    <div className='card'>                        \n                        <div className=\"ticker-div\">\n                            <p className='card-title'>{this.props.stock}</p>\n                            <button\n                                onClick={() => this.props.handleRemove(this.props.stock)}\n                                className='remove-button'\n                            > remove\n                            </button>\n                        </div>\n                        <div className=\"info\">\n                            <p className='card-price'>${this.props.price}</p>\n                            <p className='card-change'\n                               style={(this.props.change > 0)? {color: \"green\"}: {color: \"red\"}}\n                            >{this.props.change} %</p>\n                        </div>\n                        \n                    </div>\n                )}\n            </div>\n            )\n    }\n}\nexport default EachStock;","// import React, { Component } from 'react';\n// import EachStock from './EachStock.js'\n\n\n\n// class Stocks extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             myStocks: []\n//         };\n//     }\n\n//     handleRemove = stockName => {\n//         console.log(stockName)\n//         this.props.onStockRemove(stockName);\n//     };\n\n//     render() {\n//         return (\n//             <div className='mystocks_div'>\n//                 <br></br>\n//                 {this.props.stockList}\n//                 <div className='mystocks'>\n//                     {this.props.stockList &&\n//                         this.props.stockList.map((stock, key) => (\n//                             <EachStock\n//                                 key={key}\n//                                 stock={stock['symbol']}\n//                                 price={stock['iexRealtimePrice']}\n//                                 change={stock['change']}\n//                                 handleRemove={this.handleRemove}\n//                             />\n//                         ))}\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// export default Stocks;\n\n\nimport React, { Component } from 'react';\nimport EachStock from './EachStock.js';\nimport './Watchlist.css';\n\n\nclass Stocks extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            myStocks: []\n        };\n    }\n\n    handleRemove = stockName => {\n        console.log(stockName)\n        this.props.onStockRemove(stockName);\n    };\n\n    render() {\n        return (\n            <div className='mystocks_div'>\n                \n                {this.props.stockList && <p className='yourList'></p>}\n                <div className='mystocks'>\n                    {this.props.stockList &&\n                        this.props.stockList.map((stock, key) => (\n                            <EachStock\n                                key={key}\n                                stock={stock['symbol']}\n                                price={stock['latestPrice']}\n                                change={stock['change']}\n                                handleRemove={this.handleRemove}\n                            />\n                        ))}\n                </div>\n            </div>\n        );\n    }\n}\nexport default Stocks;","import React, { Component } from 'react';\nimport './Watchlist.css';\nimport Form from \"./Form.js\";\nimport iex from '../../config/iex.js'\nimport Stocks from './Stocks.js';\n\nclass WatchList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchStock: '',\n            stockList: []\n        };\n    }\n\n    getStock = async (e) => {\n        \n        const stock = e.target.stockName.value;\n        e.preventDefault();\n\n        const url = await fetch(`${iex.base_url}/stock/${stock}/quote?token=${iex.api_token}`)\n        const result = await url.json()\n        this.setState({\n            stockList: this.state.stockList.concat(result)\n        })\n        console.log(this.state.stockList)\n    }\n\n    onStockRemoveHandler = stockName => {\n        const currState = [...this.state.stockList];\n        var index = this.state.stockList.indexOf(stockName);\n            currState.splice(index, 1);\n            this.setState({ stockList: currState })\n        \n    }\n\n    render() {\n        return (\n            <div className=\"watchlist-container\">\n                <h3>Watch List</h3>\n                <Form getStock={this.getStock} />\n                <Stocks\n                    stockList={this.state.stockList}\n                    onStockRemove={this.onStockRemoveHandler}\n                />\n            </div>\n        )\n    }\n}\nexport default WatchList;\n","import React from 'react';\nimport './HomePage.css';\nimport HomeChartContainer from \"../../Components/Charts/HomeChart/HomeChartContainer.js\";\nimport Gainers from \"../../Components/Gainers/Gainers.js\";\nimport Losers from \"../../Components/Losers/Losers.js\";\nimport News from \"../../Components/News/News.js\";\nimport ListOfCompanies from \"../../Components/ListOfCompanies/ListOfCompanies.js\"\nimport Watchlist from \"../../Components/Watchlist/Watchlist.js\";\n\n\n\nfunction HomePage() {\n    console.log(window.location.pathname);\n    return (\n        <div className=\"home-page\">\n\n            {/* <div className=\"home-banner\">\n                <h1 className=\"stonk-smarter\">Home</h1>\n                <h3 className=\"welcome\">Wallstreet Stonks</h3>\n            </div> */}\n            \n            <div className=\"home-page-row-container\">\n                <News />\n                <div className=\"home-page-column-container\">\n                    <HomeChartContainer />\n                    <div className=\"home-page-lower-middle\">\n                        <Gainers />\n                        <Losers />\n                    </div>\n                    <ListOfCompanies />\n                </div>\n                <Watchlist />\n            </div>\n        </div>\n    );\n}\n\nexport default HomePage;","import React, { Component } from \"react\";\nimport './ResearchHeader.css';\n\nclass ResearchHeader extends Component {\n    constructor(props) {\n        super(props)\n        \n    }\n    \n    render() {\n        const thousand = 1000\n        const million = 1000000\n        const billion = 1000000000\n        const trillion = 1000000000000\n        const quadrillion = 1000000000000000\n        var marketcap = this.props.marketcap\n        var marketcapLabel = 'Market Cap: $'\n\n        if (marketcap >= quadrillion) {\n            marketcap = marketcap / quadrillion\n            marketcapLabel += marketcap.toFixed(2)\n            marketcapLabel = marketcapLabel + ' Q'\n        } else if (marketcap >= trillion) {\n            marketcap = marketcap / trillion\n            marketcapLabel += marketcap.toFixed(2)\n            marketcapLabel = marketcapLabel + ' T'\n        } else if (marketcap >= billion) {\n            marketcap = marketcap / billion\n            marketcapLabel += marketcap.toFixed(2)\n            marketcapLabel = marketcapLabel + ' B'\n        } else if (marketcap >= million) {\n            marketcap = marketcap / million\n            marketcapLabel += marketcap.toFixed(2)\n            marketcapLabel = marketcapLabel + ' M'\n        } else if (marketcap > 0) {\n            marketcap = marketcap / thousand\n            marketcapLabel += marketcap.toFixed(2)\n            marketcapLabel = marketcapLabel + ' K'\n        }\n\n        return (\n            <div className=\"research-banner\">\n                    \n                    <div className=\"research-banner-items\">\n                        <div>\n                            {this.props.name}: {this.props.tickerSymbol}\n                        </div>\n                        <div>\n                            Price: ${this.props.price}\n                        </div>\n                        <div>\n                            {marketcapLabel}\n                        </div>\n                    </div>\n            </div>\n        )\n    }\n}\n\n\nexport default ResearchHeader;","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst BalanceSheetChart = (props) => {\n    // Number Dividers\n    const thousand = 1000\n    const million = 1000000\n    const billion = 1000000000\n    const trillion = 1000000000000\n    const quadrillion = 1000000000000000\n\n    // Chart Data\n    var chartxLabels = [{}];\n    var currentAssetsData = [{}];\n    var currentAssetsBackgroundColor = [{}]\n    var cashData = [{}]\n    var cashBackgroundColor = [{}]\n    var longTermDebtData = [{}]\n    var longTermDebtBackgroundColor = [{}]\n    var totalCurrentLiabilitiesData = [{}]\n    var totalCurrentLiabilitiesBackgroundColor = [{}]\n\n    for (var i = 0; i < 12; i++) {\n        chartxLabels[i] = `Y${ props.data.balancesheet[11 - i].fiscalYear } Q${ props.data.balancesheet[11 - i].fiscalQuarter }`\n        currentAssetsData[i] = props.data.balancesheet[11 - i].currentAssets\n        currentAssetsBackgroundColor[i] = 'rgba(33, 109, 208, 1)'\n        cashData[i] = props.data.balancesheet[11 - i].currentCash\n        cashBackgroundColor[i] = 'rgba(33, 206, 153, 1)'\n        longTermDebtData[i] = props.data.balancesheet[11 - i].longTermDebt\n        longTermDebtBackgroundColor[i] = 'rgba(244, 84, 48, 1)'\n        totalCurrentLiabilitiesData[i] = props.data.balancesheet[11 - i].currentLongTermDebt\n        totalCurrentLiabilitiesBackgroundColor[i] = 'rgba(125, 30, 210, 1)'\n    }\n    return (\n        <div className=\"chart\">\n            <Bar\n                data={{\n                    labels: chartxLabels,\n                    datasets: [\n                        {\n                            label: \"Current Assets\",\n                            data: currentAssetsData,\n                            backgroundColor: currentAssetsBackgroundColor\n                        },\n                        {\n                            label: \"Cash\",\n                            data: cashData,\n                            backgroundColor: cashBackgroundColor\n                        },\n                        {\n                            label: \"Long Term Debt\",\n                            data: longTermDebtData,\n                            backgroundColor: longTermDebtBackgroundColor\n                        },\n                        {\n                            label: \"Current Liabilities\",\n                            data: totalCurrentLiabilitiesData,\n                            backgroundColor: totalCurrentLiabilitiesBackgroundColor\n                        }\n                    ]\n                }}\n                options={{\n                    responsive: true,\n                    maintainAspectRatio: true,\n                    tooltips: {\n                        callbacks: {\n                            label: function (tooltipItem, data) {\n                                var label = data.datasets[tooltipItem.datasetIndex].label || '';\n                                label += ': $';\n                                const absyLabel = Math.abs(tooltipItem.yLabel)\n\n                                if (absyLabel >= quadrillion) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / quadrillion\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' Q'\n                                } else if (absyLabel >= trillion) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / trillion\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' T'\n                                } else if (absyLabel >= billion) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / billion\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' B'\n                                } else if (absyLabel >= million) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / million\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' M'\n                                } else if (absyLabel > 0) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / thousand\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' K'\n                                }\n                                return label;\n                            }\n                        }\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display: false\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display: true,\n                                color: '#181818',\n                                zeroLineColor: '#181818',\n                                drawBorder: false,\n                            },\n                            ticks: {\n                                callback: function (value) {\n                                    const absValue = Math.abs(value)\n                                    if (absValue >= quadrillion) {\n                                        return '$ ' + value / quadrillion + ' Q'\n                                    } else if (absValue >= trillion) {\n                                        return '$ ' + value / trillion + ' T'\n                                    } else if (absValue >= billion) {\n                                        return '$ ' + value / billion + ' B'\n                                    } else if (absValue >= million) {\n                                        return '$ ' + value / million + ' M'\n                                    } else if (absValue > 0) {\n                                        return '$ ' + value / thousand + ' K'\n                                    } else {\n                                        return '$ ' + value\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n    )\n}\n\n\nexport default BalanceSheetChart;","import React, { Component } from 'react';\nimport './BalanceSheetChartContainer.css';\nimport BalanceSheetChart from \"../../Charts/BalanceSheetChart/BalanceSheetChart.js\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction BalanceSheetChartContainer({ tickerSymbol }) {\n    const [balanceSheet, setBalance] = useState()\n    const [isLoaded, setLoaded] = useState()\n\n    useEffect(() => {\n        (async () => {\n            let mounted = true\n            if (mounted) {\n                var sandboxMode = true\n                var baseURL\n                var token\n\n                const balanceSheet = `/stock/${tickerSymbol}/balance-sheet?period=quarter&last=12&token=`\n\n                if (sandboxMode) {\n                    baseURL = 'https://sandbox.iexapis.com/v1'\n                    token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n                }\n                else {\n                    baseURL = 'https://cloud.iexapis.com/v1'\n                    token = 'pk_2d87808402a3463ab504dac6eb52b540'\n                }\n\n                const balanceSheetURL = baseURL + balanceSheet + token\n                const result = await axios.get(balanceSheetURL, {transformRequest: (data, headers) => {\n                    delete headers.common['Authorization'];\n                  }\n                });\n                setBalance(result.data)\n                setLoaded(true)\n\n                if (sandboxMode) {\n                    function sleep(milliseconds) {\n                        const date = Date.now();\n                        let currentDate = null;\n                        do {\n                            currentDate = Date.now();\n                        } while (currentDate - date < milliseconds);\n                    }\n                    sleep(100)\n                }\n            }\n            return () => mounted = false;\n        })();\n    }, []);\n    return (\n        isLoaded ?\n            <div className=\"balance-sheet-chart\">\n                <h2>Assets & Liabilities</h2>\n                <BalanceSheetChart data={balanceSheet} />\n            </div>\n            :\n            <div className=\"balance-sheet-chart\">\n                <h1>Loading...</h1>\n                <h1>Or Unavailable</h1>\n            </div>\n    );\n}\n\n\n\nexport default BalanceSheetChartContainer;","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst CashFlowChart = (props) => {\n    // Number Dividers\n    const thousand = 1000\n    const million = 1000000\n    const billion = 1000000000\n    const trillion = 1000000000000\n    const quadrillion = 1000000000000000\n\n    // Chart Data\n    var chartxLabels = [{}];\n\n    var netIncomeData = [{}];\n    var netIncomeBackgroundColor = [{}]\n\n    var capitalExpendituresData = [{}]\n    var capitalExpendituresBackgroundColor = [{}]\n\n    var cashFlowData = [{}]\n    var cashFlowBackgroundColor = [{}]\n\n    var dividendsPaidData = [{}]\n    var dividendsPaidBackgroundColor = [{}]\n\n    for (var i = 0; i < 12; i++) {\n        chartxLabels[i] = `Y${props.cashFlow.cashflow[11 - i].fiscalYear} Q${props.cashFlow.cashflow[11 - i].fiscalQuarter }`\n\n        netIncomeData[i] = props.cashFlow.cashflow[11 - i].netIncome\n        netIncomeBackgroundColor[i] = 'rgba(33, 109, 208, 1)'\n\n        capitalExpendituresData[i] = props.cashFlow.cashflow[11 - i].capitalExpenditures\n        capitalExpendituresBackgroundColor[i] = 'rgba(244, 84, 48, 1)'\n\n        cashFlowData[i] = props.cashFlow.cashflow[11 - i].cashFlow\n        cashFlowBackgroundColor[i] = 'rgba(208, 208, 33, 1)'\n\n        dividendsPaidData = props.cashFlow.cashflow[11 - i].dividendsPaid\n        dividendsPaidBackgroundColor[i] =  'rgba(33, 206, 153, 1)'\n    }\n    return (\n        <div className=\"chart\">\n            <Bar\n                data={{\n                    labels: chartxLabels,\n                    datasets: [\n                        {\n                            label: \"Free Cash Flow\",\n                            data: netIncomeData,\n                            backgroundColor: netIncomeBackgroundColor\n                        },\n                        {\n                            label: \"Capital Expenditures\",\n                            data: capitalExpendituresData,\n                            backgroundColor: capitalExpendituresBackgroundColor\n                        },\n                        {\n                            label: \"Operating Cash Flow\",\n                            data: cashFlowData,\n                            backgroundColor: cashFlowBackgroundColor\n                        },\n                        {\n                            label: \"Dividends Paid\",\n                            data: dividendsPaidData,\n                            backgroundColor: dividendsPaidBackgroundColor\n                        }\n                    ]\n                }}\n                options={{\n                    responsive: true,\n                    maintainAspectRatio: true,\n                    tooltips: {\n                        callbacks: {\n                            label: function (tooltipItem, data) {\n                                var label = data.datasets[tooltipItem.datasetIndex].label || '';\n                                label += ': $';\n                                const absyLabel = Math.abs(tooltipItem.yLabel)\n\n                                if (absyLabel >= quadrillion) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / quadrillion\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' Q'\n                                } else if (absyLabel >= trillion) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / trillion\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' T'\n                                } else if (absyLabel >= billion) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / billion\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' B'\n                                } else if (absyLabel >= million) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / million\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' M'\n                                } else if (absyLabel > 0) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / thousand\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' K'\n                                }\n                                return label;\n                            }\n                        }\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display: false\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display: true,\n                                color: '#181818',\n                                zeroLineColor: '#181818',\n                                drawBorder: false,\n                            },\n                            ticks: {\n                                callback: function (value) {\n                                    const absValue = Math.abs(value)\n                                    if (absValue >= quadrillion) {\n                                        return '$ ' + value / quadrillion + ' Q'\n                                    } else if (absValue >= trillion) {\n                                        return '$ ' + value / trillion + ' T'\n                                    } else if (absValue >= billion) {\n                                        return '$ ' + value / billion + ' B'\n                                    } else if (absValue >= million) {\n                                        return '$ ' + value / million + ' M'\n                                    } else if (absValue > 0) {\n                                        return '$ ' + value / thousand + ' K'\n                                    } else {\n                                        return '$ ' + value\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n    )\n}\n\n\nexport default CashFlowChart;","import React, { useState, useEffect } from 'react';\nimport './CashFlowChartContainer.css';\nimport CashFlowChart from \"../../Charts/CashFlowChart/CashFlowChart.js\";\nimport axios from 'axios';\n\nfunction CashFlowChartContainer({ tickerSymbol }) {\n    const [cashFlow, setCashFlow] = useState()\n    const [isLoaded, setLoaded] = useState()\n\n    useEffect(() => {\n        (async () => {\n            let mounted = true\n            if (mounted) {\n                var sandboxMode = true\n                var baseURL\n                var token\n\n                const cashFlow = `/stock/${tickerSymbol}/cash-flow?period=quarter&last=12&token=`\n\n                if (sandboxMode) {\n                    baseURL = 'https://sandbox.iexapis.com/v1'\n                    token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n                }\n                else {\n                    baseURL = 'https://cloud.iexapis.com/v1'\n                    token = 'pk_2d87808402a3463ab504dac6eb52b540'\n                }\n\n                const cashFlowURL = baseURL + cashFlow + token\n                const result = await axios.get(cashFlowURL, {transformRequest: (data, headers) => {\n                    delete headers.common['Authorization'];\n                  }\n                });\n                setCashFlow(result.data)\n                setLoaded(true)\n\n                if (sandboxMode) {\n                    function sleep(milliseconds) {\n                        const date = Date.now();\n                        let currentDate = null;\n                        do {\n                            currentDate = Date.now();\n                        } while (currentDate - date < milliseconds);\n                    }\n                    sleep(100)\n                }\n            }\n            return () => mounted = false;\n        })();\n    }, []);\n    return (\n        isLoaded ?\n            <div className=\"cash-flow-chart\">\n                <h2>Cash Flow</h2>\n                <CashFlowChart cashFlow={cashFlow} />\n            </div>\n            :\n            <div className=\"cash-flow-chart\">\n                <h1>Loading...</h1>\n                <h1>Or Unavailable</h1>\n            </div>\n    );\n}\nexport default CashFlowChartContainer;","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst IncomeStatementChart = (props) => {\n    // Number Dividers\n    const thousand = 1000\n    const million = 1000000\n    const billion = 1000000000\n    const trillion = 1000000000000\n    const quadrillion = 1000000000000000\n\n    // Chart Data\n    var chartxLabels = [{}]\n    var revenueData = [{}]\n    var operatingExpenses = [{}]\n    var operatingIncomeData = [{}]\n    var grossProfitData = [{}]\n    var netIncomeData = [{}]\n\n    var revenueBackgroundColor = [{}]\n    var operatingExpensesBackgroundColor = [{}]\n    var grossProfitBackgroundColor = [{}]\n    var operatingIncomeBackgroundColor = [{}]\n    var netIncomeBackgroundColor = [{}]\n\n    for (var i = 0; i < 12; i++) {\n        chartxLabels[i] = `Y${ props.data.income[11 - i].fiscalYear } Q${ props.data.income[11 - i].fiscalQuarter }`\n        revenueData[i] = props.data.income[11 - i].totalRevenue\n        operatingExpenses[i] = props.data.income[11 - i].operatingExpense\n        operatingIncomeData[i] = props.data.income[11 - i].operatingIncome\n        grossProfitData[i] = props.data.income[11 - i].grossProfit\n        netIncomeData[i] = props.data.income[11 - i].netIncome\n\n        revenueBackgroundColor[i] = 'rgba(33, 109, 208, 1)'\n        operatingExpensesBackgroundColor[i] = 'rgba(208, 208, 33, 1)'\n        grossProfitBackgroundColor[i] = 'rgba(244, 84, 48, 1)'\n        operatingIncomeBackgroundColor[i] = 'rgba(125, 30, 210, 1)'\n        netIncomeBackgroundColor[i] = 'rgba(33, 206, 153, 1)'\n    }\n\n    return (\n        <div className=\"chart\">\n            <Bar\n                data={{\n                    labels: chartxLabels,\n                    datasets: [\n                        {\n                            label: \"Revenue\",\n                            data: revenueData,\n                            backgroundColor: revenueBackgroundColor\n                        },\n                        {\n                            label: \"Operating Expenses\",\n                            data: operatingExpenses,\n                            backgroundColor: operatingExpensesBackgroundColor\n                        },\n                        {\n                            label: \"Gross Profit\",\n                            data: grossProfitData,\n                            backgroundColor: grossProfitBackgroundColor\n                        },\n                        {\n                            label: \"Operating Income\",\n                            data: operatingIncomeData,\n                            backgroundColor: operatingIncomeBackgroundColor\n\n                        },\n                        {\n                            label: \"Net Income\",\n                            data: netIncomeData,\n                            backgroundColor: netIncomeBackgroundColor\n                        },\n                    ]\n                }}\n                options={{\n                    responsive: true,\n                    maintainAspectRatio: true,\n                    tooltips: {\n                        callbacks: {\n                            label: function (tooltipItem, data) {\n                                var label = data.datasets[tooltipItem.datasetIndex].label || '';\n                                label += ': $';\n                                const absyLabel = Math.abs(tooltipItem.yLabel)\n\n                                if (absyLabel >= quadrillion) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / quadrillion\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' Q'\n                                } else if (absyLabel >= trillion) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / trillion\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' T'\n                                } else if (absyLabel >= billion) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / billion\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' B'\n                                } else if (absyLabel >= million) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / million\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' M'\n                                } else if (absyLabel > 0) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / thousand\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' K'\n                                }\n                                return label;\n                            }\n                        }\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display: false\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display: true,\n                                color: '#181818',\n                                zeroLineColor: '#181818',\n                                drawBorder: false,\n                            },\n                            ticks: {\n                                callback: function (value) {\n                                    const absValue = Math.abs(value)\n                                    if (absValue >= quadrillion) {\n                                        return '$ ' + value / quadrillion + ' Q'\n                                    } else if (absValue >= trillion) {\n                                        return '$ ' + value / trillion + ' T'\n                                    } else if (absValue >= billion) {\n                                        return '$ ' + value / billion + ' B'\n                                    } else if (absValue >= million) {\n                                        return '$ ' + value / million + ' M'\n                                    } else if (absValue > 0) {\n                                        return '$ ' + value / thousand + ' K'\n                                    } else {\n                                        return '$ ' + value\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n    )\n}\n\n\nexport default IncomeStatementChart;","import React, { useState, useEffect } from 'react';\nimport './IncomeStatementChartContainer.css';\nimport IncomeStatementChart from \"../../Charts/IncomeStatementChart/IncomeStatementChart.js\";\nimport axios from 'axios';\n\n\nfunction IncomeStatementChartContainer({ tickerSymbol }) {\n\n    const [income, setData] = useState(tickerSymbol);\n    const [isLoaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            let mounted = true\n            if (mounted) {\n\n                var sandboxMode = true\n                var baseURL\n                var token\n                console.log(income)\n                const incomeStatement = `/stock/${tickerSymbol}/income?period=quarter&last=12&token=`\n\n                if (sandboxMode) {\n                    baseURL = 'https://sandbox.iexapis.com/v1'\n                    token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n                }\n                else {\n                    baseURL = 'https://cloud.iexapis.com/v1'\n                    token = 'pk_2d87808402a3463ab504dac6eb52b540'\n                }\n\n                const incomeStatementURL = baseURL + incomeStatement + token\n                const result = await axios.get(incomeStatementURL, {transformRequest: (data, headers) => {\n                    delete headers.common['Authorization'];\n                  }\n                });\n                console.log(result)\n                setData(result.data)\n                setLoaded(true)\n\n                if (sandboxMode) {\n                    function sleep(milliseconds) {\n                        const date = Date.now();\n                        let currentDate = null;\n                        do {\n                            currentDate = Date.now();\n                        } while (currentDate - date < milliseconds);\n                    }\n                    sleep(100)\n                }\n\n            }\n            return () => mounted = false;\n        })();\n    }, []);\n    return (\n        isLoaded ?\n            <div className=\"income-statement-chart\">\n                <h2>Revenue, Operating Expenses, & Income</h2>\n                  <IncomeStatementChart data={income} />\n            </div>\n            :\n            <div className=\"income-statement-chart\">\n                <h1>Income Statement</h1>\n                <h1>Loading...</h1>\n                <h1>Or Unavailable</h1>\n            </div>\n    );\n}\n\n\nexport default IncomeStatementChartContainer;","import React, { useEffect } from 'react';\nimport BalanceSheetChartContainer from \"../../Components/Charts/BalanceSheetChart/BalanceSheetChartContainer.js\";\nimport CashFlowChartContainer from \"../../Components/Charts/CashFlowChart/CashFlowChartContainer.js\";\nimport IncomeStatementChartContainer from \"../../Components/Charts/IncomeStatementChart/IncomeStatementChartContainer.js\";\nimport './ResearchPageFinancials.css';\nimport { useState } from 'react';\n\n\nconst ResearchPageFinancials = React.memo(({ tickerSymbol }) => {\n\n    const [data, setData] = useState(tickerSymbol)\n\n    return (\n        <div className=\"research-page-financials\">\n            <IncomeStatementChartContainer tickerSymbol={data} />\n            <BalanceSheetChartContainer tickerSymbol={data} />\n            <CashFlowChartContainer tickerSymbol={data} />\n        </div>\n    );\n});\n\nexport default ResearchPageFinancials;","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\n\n\nconst EPSChart = (props) => {\n\n    const thousand = 1000\n    const million = 1000000\n    const billion = 1000000000\n    const trillion = 1000000000000\n    const quadrillion = 1000000000000000\n\n    var sharesOutstandingData = [{}]\n    var netIncomeData = [{}]\n    var chartxLabels = [{}]\n    var EPSData = [{}]\n    var EPSDataBackgroundColor = [{}]\n\n\n    for (var i = 0; i < 12; i++) {\n        chartxLabels[i] = `Y${props.incomeStatement.income[11 - i].fiscalYear} Q${props.incomeStatement.income[11 - i].fiscalQuarter}`\n        netIncomeData[i] = props.incomeStatement.income[11 - i].netIncome\n        sharesOutstandingData[i] = props.sharesOutstanding\n        EPSData[i] = netIncomeData[i] / sharesOutstandingData[i]\n        EPSDataBackgroundColor[i] = 'rgba(33, 206, 153, 1)'\n    }\n\n    return (\n        <div className=\"chart\">\n            <Bar\n                data={{\n                    labels: chartxLabels,\n                    datasets: [\n                        {\n                            label: \"Earnings Per Share\",\n                            data: EPSData,\n                            backgroundColor: EPSDataBackgroundColor\n                        }\n                    ]\n                }}\n\n                options={{\n                    responsive: true,\n                    maintainAspectRatio: true,\n                    tooltips: {\n                        callbacks: {\n                            label: function (tooltipItem, data) {\n                                var label = data.datasets[tooltipItem.datasetIndex].label || '';\n                                label += ': $';\n                                const absyLabel = Math.abs(tooltipItem.yLabel)\n\n                                if (absyLabel >= quadrillion) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / quadrillion\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' Q'\n                                } else if (absyLabel >= trillion) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / trillion\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' T'\n                                } else if (absyLabel >= billion) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / billion\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' B'\n                                } else if (absyLabel >= million) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / million\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' M'\n                                } else if (absyLabel >= thousand) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel / thousand\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                    label = label + ' K'\n                                } else if (absyLabel >= 0) {\n                                    tooltipItem.yLabel = tooltipItem.yLabel\n                                    label += Math.round(tooltipItem.yLabel * 100) / 100\n                                }\n                                return label;\n                            }\n                        }\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display: false\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display: true,\n                                color: '#181818',\n                                zeroLineColor: '#181818',\n                                drawBorder: false,\n                            },\n                            ticks: {\n                                callback: function (value) {\n                                    const absValue = Math.abs(value)\n                                    if (absValue >= quadrillion) {\n                                        return '$ ' + value / quadrillion + ' Q'\n                                    } else if (absValue >= trillion) {\n                                        return '$ ' + value / trillion + ' T'\n                                    } else if (absValue >= billion) {\n                                        return '$ ' + value / billion + ' B'\n                                    } else if (absValue >= million) {\n                                        return '$ ' + value / million + ' M'\n                                    } else if (absValue >= thousand) {\n                                        return '$ ' + value / thousand + ' K'\n                                    } else {\n                                        return '$ ' + value\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }}\n\n\n            />\n        </div>\n    )\n}\n\n\nexport default EPSChart;\n","import React from 'react';\nimport './EPSChartContainer.css';\nimport EPSChart from \"../../Charts/EPSChart/EPSChart.js\";\nimport { useState } from 'react';\n\n\nfunction EPSChartContainer({ incomeStatement, sharesOutstanding }) {\n    const [income, setIncome] = useState(incomeStatement);\n    const [shares, setShares] = useState(sharesOutstanding);\n\n    return (\n            <div className=\"eps-chart\">\n                <h2>Earnings Per Share</h2>\n                <EPSChart incomeStatement={income} sharesOutstanding={shares} />\n            </div>\n    );\n\n}\n\n\n\nexport default EPSChartContainer;","import React, { useEffect, useState } from 'react';\nimport './ResearchPageStats.css';\nimport EPSChartContainer from \"../../Components/Charts/EPSChart/EPSChartContainer.js\";\nimport axios from 'axios';\n\nconst ResearchPageStats = React.memo(({ tickerSymbol }) => {\n\n    const [ticker] = useState(tickerSymbol);\n    const [stats, setStats] = useState();\n    console.log(stats)\n    const [income, setIncome] = useState();\n    const [isLoaded1, setLoaded1] = useState(false);\n    const [isLoaded2, setLoaded2] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            let mounted = true\n            if (mounted) {\n                var sandboxMode = true\n                var baseURL\n                var token\n                const keyStats = `/stock/${tickerSymbol}/stats/?&token=`\n                const incomeStatement = `/stock/${tickerSymbol}/income?period=quarter&last=12&token=`\n\n                if (sandboxMode) {\n                    baseURL = 'https://sandbox.iexapis.com/v1'\n                    token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n                }\n                else {\n                    baseURL = 'https://cloud.iexapis.com/v1'\n                    token = 'pk_2d87808402a3463ab504dac6eb52b540'\n                }\n\n                const keyStatsURL = baseURL + keyStats + token\n                const incomeStatementURL = baseURL + incomeStatement + token\n\n                const statsResult = await axios.get(keyStatsURL, {transformRequest: (data, headers) => {\n                    delete headers.common['Authorization'];\n                  }\n                });\n                const incomeResult = await axios.get(incomeStatementURL, {transformRequest: (data, headers) => {\n                    delete headers.common['Authorization'];\n                  }\n                });\n                setStats(statsResult.data)\n                setLoaded1(true)\n                setIncome(incomeResult.data)\n                setLoaded2(true)\n\n            }\n            return () => mounted = false;\n        })();\n    }, [ticker]);\n\n    return (\n        isLoaded1 && isLoaded2 ?\n            <div className=\"research-page-stats\">\n                <EPSChartContainer incomeStatement={income} sharesOutstanding={stats.sharesOutstanding} />\n            </div>\n            :\n            <div className=\"research-page-stats\">\n                <h1>Loading...</h1>\n            </div>\n    );\n});\n\nexport default ResearchPageStats;","export default __webpack_public_path__ + \"static/media/NotStocksGuy.a5e40399.png\";","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\n\nconst DividendsChart = (props) => {\n\n    var month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    var DividendData = [{}]\n    var chartxLabels = [{}]\n    var DividendDataBackgroundColor = [{}]\n    var maxValue = 0\n\n    for (var i = 0; i < props.dividends.length; i++) {\n        chartxLabels[i] = month[Number((props.dividends[props.dividends.length - 1 - i].paymentDate).slice(5, 7)) - 1] + \" \" + Number((props.dividends[props.dividends.length - 1 - i].paymentDate).slice(8, 10)) + \", \" + (props.dividends[props.dividends.length - 1 - i].paymentDate).slice(0, 4)\n        console.log(props.dividends[props.dividends.length - 1 - i])\n        DividendData[i] = props.dividends[props.dividends.length - 1 - i].amount\n        if (DividendData[i] > maxValue) {\n            maxValue = DividendData[i]\n        }\n        DividendDataBackgroundColor[i] = 'rgba(33, 206, 153, 1)'\n    }\n\n    return (\n        <div className=\"chart\">\n            <Bar\n                data={{\n                    labels: chartxLabels,\n                    datasets: [\n                        {\n                            label: \"Dividend Paid\",\n                            data: DividendData,\n                            backgroundColor: DividendDataBackgroundColor\n                        }\n                    ]\n                }}\n\n                options={{\n                    responsive: true,\n                    maintainAspectRatio: true,\n                    tooltips: {\n                        callbacks: {\n                            label: function (tooltipItem, data) {\n                                var label = data.datasets[tooltipItem.datasetIndex].label || '';\n                                label += ': $';\n                                tooltipItem.yLabel = tooltipItem.yLabel\n                                label += tooltipItem.yLabel\n                                return label;\n                            }\n                        }\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display: false\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display: true,\n                                color: '#181818',\n                                zeroLineColor: '#181818',\n                                drawBorder: false,\n                            },\n                            ticks: {\n                                beginAtZero: true,\n                                suggestedMax: maxValue * 1.3,\n                                callback: function (value) {\n                                        return '$ ' + value\n                                }\n                            }\n                        }]\n                    }\n                }}\n\n\n            />\n        </div>\n    )\n\n\n}\n\n\nexport default DividendsChart;\n","import React, { Component } from 'react';\nimport NotStonksGuy from '../../../NotStocksGuy.png';\nimport './DividendsChartContainer.css';\nimport DividendsChart from \"../../Charts/DividendsChart/DividendsChart.js\";\n\n\nclass DividendsChartContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tickerSymbol: props.tickerSymbol,\n            dividends: [{}],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        var sandboxMode = true\n        var baseURL\n        var token\n        const dividends = `/stock/${this.state.tickerSymbol}/dividends/5y?period=quarter&last=12&token=`\n\n        if (sandboxMode) {\n            baseURL = 'https://sandbox.iexapis.com/v1'\n            token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n        }\n        else {\n            baseURL = 'https://cloud.iexapis.com/v1'\n            token = 'pk_2d87808402a3463ab504dac6eb52b540'\n        }\n\n        const dividendsURL = baseURL + dividends + token\n\n        fetch(dividendsURL)\n            .then(response => response.json())\n            .then(data => this.setState({ dividends: data, isLoaded: true }))\n    }\n    render() {\n        return (\n            this.state.isLoaded ?\n                this.state.dividends.length !== 0 ? \n                    <div className=\"dividends-chart\">\n                        <h2>Dividends</h2>\n                        <DividendsChart dividends={this.state.dividends} />\n                    </div>\n                    : \n                    <div className=\"dividends-chart\">\n                        <h1>Dividends Unavailable</h1>\n                        <img className=\"not-stonks-guy\" alt=\"\" src={NotStonksGuy} />\n                    </div>\n                :\n                <div className=\"dividends-chart\">\n                    <h1>Loading...</h1>\n                    <h1>Or Unavailable</h1>\n                </div>\n        );\n    }\n}\n\n\nexport default DividendsChartContainer;","import React, { useState } from 'react';\nimport './ResearchPageDividends.css';\nimport DividendsChartContainer from \"../../Components/Charts/DividendsChart/DividendsChartContainer.js\";\n\nfunction ResearchPageDividends({ tickerSymbol }) {\n    const [ticker] = useState(tickerSymbol)\n\n    return (\n        <div className=\"research-page-dividends\">\n            <DividendsChartContainer tickerSymbol={ticker} />\n        </div>\n    );\n\n}\n\nexport default ResearchPageDividends;","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport './PriceChartContainer.css';\n\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst PriceChart = (props) => {\n\n    var month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    var chartxLabels = [{}]\n    var data = [{}]\n    var backgroundColor\n    var chartHeader\n    var price\n    var priceChange\n    var percentChange\n    \n    const daysIn5Years = 5 * 365 + 2;\n    var i\n    for (i = 0; i < daysIn5Years; i++) {\n        if (typeof props.data[i] === 'undefined') {\n            break;\n        }\n        chartxLabels[i] = month[Number((props.data[i].date).slice(5, 7)) - 1] + \" \" + Number((props.data[i].date).slice(8, 10)) + \", \" + (props.data[i].date).slice(0, 4)\n        data[i] = props.data[i].close\n    }\n\n    if (props.data[i - 1].close >= props.data[0].close) {\n        backgroundColor = 'rgba(33, 206, 153, 1)'\n        price = numberWithCommas(props.data[i - 1].close)\n        priceChange = numberWithCommas((props.data[i - 1].close - props.data[0].close).toFixed(2))\n        percentChange = numberWithCommas(((props.data[i - 1].close / props.data[0].close * 10000) / 100 - 100).toFixed(2))\n        chartHeader = <div className=\"green\">\n            <h4>+${priceChange} (+{percentChange}%)</h4>\n        </div>\n    } else {\n        backgroundColor = 'rgba(244, 84, 48, 1)'\n        price = numberWithCommas(props.data[i - 1].close)\n        priceChange = numberWithCommas((props.data[0].close - props.data[i - 1].close).toFixed(2))\n        percentChange = numberWithCommas(((props.data[0].close / props.data[i - 1].close * 10000) / 100 - 100).toFixed(2))\n        chartHeader = <div className=\"red\">\n            <h4>-${priceChange} (-{percentChange}%)</h4>\n        </div>\n    }\n    \n    return (\n        <div>\n            {chartHeader}\n            <Line\n                data={{\n                    labels: chartxLabels,\n                    datasets: [\n                        {\n                            label: \"Price\",\n                            data: data,\n                            borderColor: backgroundColor,\n                            backgroundColor: backgroundColor,\n                            fill: false,\n                            borderWidth: 2,\n                            pointHoverRadius: 4\n                        },\n                    ]\n                }}\n                options={{\n                    responsive: true,\n                    maintainAspectRatio: true,\n                    elements: {\n                        point: {\n                            radius: 0\n                        }\n                    },\n                    legend: {\n                        display: false\n                    },\n                    tooltips: {\n                        mode: 'x-axis',\n                        callbacks: {\n                            label: function (tooltipItem, data) {\n                                var label = data.datasets[tooltipItem.datasetIndex].label || '';\n                                label += ': $' + tooltipItem.yLabel;\n                                return label;\n                            }\n                        }\n                    },\n                    hover: {\n                        mode: 'index',\n                        intersect: false,\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display: false\n                            },\n                            ticks: {\n                                display: true,\n                                autoSkip: true,\n                                maxTicksLimit: 16,\n                                callback: function (value) {\n                                    return value.slice(0, 4) + value.slice(7, 12)\n                                }\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display: true,\n                                color: '#181818',\n                                zeroLineColor: '#181818',\n                                drawBorder: false,\n                            },\n                            ticks: {\n                                callback: function (value) {\n                                    return '$ ' + value\n                                }\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n    )\n}\n\n\nexport default PriceChart;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './PriceChartContainer.css';\nimport PriceChart from \"../../Charts/PriceChart/PriceChart.js\";\n\n\nfunction PriceChartContainer({ tickerSymbol, keyStats }) {\n    const [ticker] = useState(tickerSymbol)\n    const [stats] = useState(keyStats)\n    const [prices, setPrices] = useState()\n    const [isLoaded, setLoaded] = useState(false)\n\n    useEffect(() => {\n        (async () => {\n            let mounted = true\n            if (mounted) {\n                var sandboxMode = true\n                var baseURL\n                var token\n                var range = '5y'\n                const prices = `/stock/${ticker}/chart/${range}/?token=`\n\n                if (sandboxMode) {\n                    baseURL = 'https://sandbox.iexapis.com/v1'\n                    token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n                }\n                else {\n                    baseURL = 'https://cloud.iexapis.com/v1'\n                    token = 'pk_2d87808402a3463ab504dac6eb52b540'\n                }\n\n                const pricesURL = baseURL + prices + token\n\n                const pricesResult = await axios.get(pricesURL, {transformRequest: (data, headers) => {\n                    delete headers.common['Authorization'];\n                  }\n                });\n                setPrices(pricesResult.data)\n                setLoaded(true)\n\n            }\n            return () => mounted = false;\n        })();\n    }, [ticker]);\n\n    return (\n        isLoaded ?\n            <div className=\"price-chart-container\">\n                <div className=\"price-chart\">\n                    <PriceChart data={prices} keyStats={stats} />\n                </div>\n            </div>\n            :\n            <div>\n                <div className=\"price-chart-container\">\n                    <div className=\"price-chart\">\n                        <h1>Loading...</h1>\n                        <h1>Or Unavailable</h1>\n                    </div>\n                </div>\n            </div>\n    );\n}\n\nexport default PriceChartContainer;","import React, { useEffect, useState } from 'react';\nimport './PriceChartInfo.css';\nimport axios from 'axios';\n\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nfunction PriceChartInfo({ tickerSymbol, keyStat }) {\n\n    const [ticker] = useState(tickerSymbol)\n    const [keyStats] = useState(keyStat)\n    const [advStats, setStats] = useState()\n    const [isLoaded, setLoaded] = useState(false)\n    console.log(ticker)\n\n    useEffect(() => {\n        (async () => {\n            let mounted = true\n            if (mounted) {\n                var sandboxMode = true\n                var baseURL\n                var token\n                const advStats = `/stock/${ticker}/advanced-stats/companyname?&token=`\n\n                if (sandboxMode) {\n                    baseURL = 'https://sandbox.iexapis.com/v1'\n                    token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n                }\n                else {\n                    baseURL = 'https://cloud.iexapis.com/v1'\n                    token = 'pk_2d87808402a3463ab504dac6eb52b540'\n                }\n\n                const advStatsURL = baseURL + advStats + token\n                const statsResult = await axios.get(advStatsURL, {transformRequest: (data, headers) => {\n                    delete headers.common['Authorization'];\n                  }\n                });\n                setStats(statsResult.data)\n                console.log(advStats)\n                setLoaded(true)\n                \n            }           \n            \n            return () => mounted = false;\n        })();\n    }, [ticker]);\n\n    if (advStats) {\n        var forwardPERatio = advStats.forwardPERatio === \"\" || advStats.forwardPERatio === null ? \"-\" : (advStats.forwardPERatio).toFixed(2);\n        var peRatio = keyStats.peRatio === \"\" || advStats.forwardPERatio == null ? \"-\" : (keyStats.peRatio).toFixed(2);\n        var profitMargin = advStats.profitMargin === \"\" ? \"-\" : (advStats.profitMargin * 100).toFixed(2) + \"%\";\n        var beta = keyStats.beta === \"\" ? \"-\" : (keyStats.beta).toFixed(2)\n        var sharesOutstanding = keyStats.sharesOutstanding === \"\" ? \"-\" : numberWithCommas((keyStats.sharesOutstanding / 1000000).toFixed(0)) + \" M\";\n        var dividendYeild = keyStats.dividendYield === \"\" ? \"-\" : Math.round(keyStats.dividendYield * 10000) / 100 + \"%\";\n        var nextDividendDate = (keyStats.nextDividendDate === \"\" || keyStats.nextDividendDate === \"0\") ? \"-\" : keyStats.nextDividendDate;\n        var nextEarningsDate = (keyStats.nextEarningsDate === \"\" || keyStats.nextEarningsDate === \"0\") ? \"-\" : keyStats.nextEarningsDate;\n\n        var month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n        nextEarningsDate = month[Number((nextEarningsDate).slice(5, 7)) - 1] + \" \" + Number((nextEarningsDate).slice(8, 10)) + \", \" + (nextEarningsDate).slice(0, 4)\n        if (nextDividendDate !== \"-\") {\n            nextDividendDate = month[Number((nextDividendDate).slice(5, 7)) - 1] + \" \" + Number((nextDividendDate).slice(8, 10)) + \", \" + (nextDividendDate).slice(0, 4)\n        } else if (nextDividendDate === \"undefined 0, -\") {\n            nextDividendDate = nextDividendDate.slice(13, 14)\n        }\n        if (nextEarningsDate === \"-\") {\n            nextEarningsDate = month[Number((nextEarningsDate).slice(5, 7)) - 1] + \" \" + Number((nextEarningsDate).slice(8, 10)) + \", \" + (nextEarningsDate).slice(0, 4)\n        } else if (nextEarningsDate === \"undefined 0, -\") {\n            nextEarningsDate = nextEarningsDate.slice(13, 14)\n        }\n    }\n\nreturn (\n    isLoaded ?\n        <div className=\"price-chart-info-container\">\n            <div className=\"price-chart-info\">\n                <div className=\"price-chart-info-item-row\">\n                    <div className=\"price-chart-info-item\">\n                        <p className=\"price-chart-info-title\">Forward P/E Ratio</p>\n                        <p className=\"price-chart-info-data\">{forwardPERatio}</p>\n                    </div>\n                    <div className=\"price-chart-info-item\">\n                        <p className=\"price-chart-info-title\">P/E Ratio</p>\n                        <p className=\"price-chart-info-data\">{peRatio}</p>\n                    </div>\n                    <div className=\"price-chart-info-item\">\n                        <p className=\"price-chart-info-title\">Profit Margin</p>\n                        <p className=\"price-chart-info-data\">{profitMargin}</p>\n                    </div>\n                    <div className=\"price-chart-info-item\">\n                        <p className=\"price-chart-info-title\">Shares Outstanding</p>\n                        <p className=\"price-chart-info-data\">{sharesOutstanding}</p>\n                    </div>\n\n                    <div className=\"price-chart-info-item\">\n                        <p className=\"price-chart-info-title\">Beta</p>\n                        <p className=\"price-chart-info-data\">{beta}</p>\n                    </div>\n                    <div className=\"price-chart-info-item\">\n                        <p className=\"price-chart-info-title\">Dividend Yeild</p>\n                        <p className=\"price-chart-info-data\">{dividendYeild}</p>\n                    </div>\n                    <div className=\"price-chart-info-item\">\n                        <p className=\"price-chart-info-title\">Next Dividend Date</p>\n                        <p className=\"price-chart-info-data\">{nextDividendDate}</p>\n                    </div>\n                    <div className=\"price-chart-info-item\">\n                        <p className=\"price-chart-info-title\">Next Earnings Date</p>\n                        <p className=\"price-chart-info-data\">{nextEarningsDate}</p>\n                    </div>\n                </div>\n                <div className=\"price-chart-info-item-row\">\n\n                </div>\n            </div>\n        </div>\n        :\n        <div>\n            <h1>Income Statement</h1>\n            <h1>Loading...</h1>\n            <h1>Or Unavailable</h1>\n        </div>\n);\n\n}\n\nexport default PriceChartInfo;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ResearchPagePriceChart.css';\nimport PriceChartContainer from '../../Components/Charts/PriceChart/PriceChartContainer.js';\nimport PriceChartInfo from '../../Components/Charts/PriceChart/PriceChartInfo';\n\nconst ResearchPagePriceChart = React.memo(({ tickerSymbol }) => {\n    const [ticker] = useState(tickerSymbol)\n    console.log(ticker)\n    const [stats, setStats] = useState();\n    const [isLoaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            let mounted = true\n            if (mounted) {\n                var sandboxMode = true\n                var baseURL\n                var token\n                const keyStats = `/stock/${ticker}/stats/?&token=`\n\n                if (sandboxMode) {\n                    baseURL = 'https://sandbox.iexapis.com/v1'\n                    token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n                }\n                else {\n                    baseURL = 'https://cloud.iexapis.com/v1'\n                    token = 'pk_2d87808402a3463ab504dac6eb52b540'\n                }\n\n                const keyStatsURL = baseURL + keyStats + token\n\n                const statsResult = await axios.get(keyStatsURL, {transformRequest: (data, headers) => {\n                    delete headers.common['Authorization'];\n                  }\n                });\n                setStats(statsResult.data)\n                setLoaded(true)\n\n\n            }\n            return () => mounted = false;\n        })();\n    }, [ticker]);\n\n    return (\n        isLoaded ?\n            <div className=\"research-page-price-chart\">\n                <PriceChartContainer tickerSymbol={ticker} keyStats={stats} />\n                <PriceChartInfo tickerSymbol={ticker} keyStat={stats} />\n            </div>\n            :\n            <div className=\"research-page-price-chart\">Loading...</div>\n    );\n\n});\n\nexport default ResearchPagePriceChart;","import React, { useEffect, useState } from 'react';\nimport './CompanyOverview.css';\nimport axios from 'axios';\n\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nfunction CompanyOverview({ tickerSymbol, companyName }) {\n    const [ticker] = useState(tickerSymbol)\n    const [logo, setLogo] = useState()\n    const [companyInfo, setCompanyInfo] = useState()\n    const [isLoaded, setLoaded] = useState(false)\n    console.log(ticker)\n    useEffect(() => {\n        (async () => {\n            let mounted = true\n            if (mounted) {\n                var sandboxMode = true\n                var baseURL\n                var token\n                const logo = `/stock/${ticker}/logo?&token=`\n                const company = `/stock/${ticker}/company?&token=`\n\n                if (sandboxMode) {\n                    baseURL = 'https://sandbox.iexapis.com/v1'\n                    token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n                }\n                else {\n                    baseURL = 'https://cloud.iexapis.com/v1'\n                    token = 'pk_2d87808402a3463ab504dac6eb52b540'\n                }\n\n                const logoURL = baseURL + logo + token\n                const companyInfoURL = baseURL + company + token\n\n                const logoResult = await axios.get(logoURL)\n                const companyInfoResult = await axios.get(companyInfoURL, {transformRequest: (data, headers) => {\n                    delete headers.common['Authorization'];\n                  }\n                });\n                setLogo(logoResult.data)\n                setCompanyInfo(companyInfoResult.data)\n                setLoaded(true)\n            \n            }\n            return () => mounted = false;\n        })();\n    }, [ticker]);\n\n    return (\n        isLoaded && logo.url && companyInfo.website && companyInfo.description && companyInfo.CEO && companyInfo.industry && companyInfo.address && companyInfo.city && companyInfo.state && companyInfo.zip && companyInfo.employees ?\n            <div className=\"company-overview\">\n                <div>\n                    <div className=\"company-website\">\n                        <img className=\"company-logo\" src={logo.url} alt=\"\"></img>\n                        <a className=\"company-link\" alt=\"\" href={companyInfo.website}>\n                            <p className=\"company-info-data-website\">{companyInfo.website.slice(8, companyInfo.website.length - 1)}</p>\n                        </a>\n                    </div>\n                    <p className=\"company-info-data\">{companyInfo.description}</p>\n                    <p className=\"company-info-title\">CEO</p>\n                    <p className=\"company-info-data\">{companyInfo.CEO}</p>\n                    <p className=\"company-info-title\">Industry</p>\n                    <p className=\"company-info-data\">{companyInfo.industry}</p>\n                    <p className=\"company-info-title\">Address</p>\n                    <p className=\"company-info-data\">{companyInfo.address}</p>\n                    <p className=\"company-info-data\">{companyInfo.city}, {companyInfo.state}</p>\n                    <p className=\"company-info-data\">{companyInfo.zip}</p>\n                    <p className=\"company-info-title\">Employees</p>\n                    <p className=\"company-info-data\">{numberWithCommas(companyInfo.employees)}</p>\n                </div>\n            </div>\n            :\n            <div className=\"company-overview\">\n                <h1>Loading...</h1>\n                <h1>Or Unavailable</h1>\n            </div>\n    );\n}\nexport default CompanyOverview;","import React, { Component } from 'react';\nimport './CompanyNews.css';\n\n\nclass CompanyNews extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tickerSymbol: props.tickerSymbol,\n            companyNews: [{}],\n            isloaded: false\n        }\n    }\n\n    componentDidMount() {\n        var sandboxMode = true\n        var baseURL\n        var token\n        const companyNews = `/time-series/news/${this.state.tickerSymbol}/?range=last-week&limit=3&token=`\n\n        if (sandboxMode) {\n            baseURL = 'https://sandbox.iexapis.com/v1'\n            token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n        }\n        else {\n            baseURL = 'https://cloud.iexapis.com/v1'\n            token = 'pk_2d87808402a3463ab504dac6eb52b540'\n        }\n\n        const companyNewsURL = baseURL + companyNews + token\n\n        fetch(companyNewsURL)\n            .then(response => response.json())\n            .then(data => this.setState({ companyNews: data, isLoaded: true }))\n    }\n\n    render() {\n        return (\n            this.state.isLoaded?\n                <div className=\"company-news\">\n                    <a className=\"company-news-link\" alt=\"\" href={this.state.companyNews[0].qmUrl}>\n                        <img className=\"company-news-img\" alt=\"\" src={this.state.companyNews[0].image}></img>\n                        <p className=\"\">{this.state.companyNews[0].headline}</p>\n                    </a>\n                    <a className=\"company-news-link\" alt=\"\" href={this.state.companyNews[1].qmUrl}>\n                        <img className=\"company-news-img\" alt=\"\" src={this.state.companyNews[1].image}></img>\n                        <p className=\"\">{this.state.companyNews[1].headline}</p>\n                    </a>\n                    <a className=\"company-news-link\" alt=\"\" href={this.state.companyNews[2].qmUrl}>\n                        <img className=\"company-news-img\" alt=\"\" src={this.state.companyNews[2].image}></img>\n                        <p className=\"\">{this.state.companyNews[1].headline}</p>\n                    </a>\n                </div>\n                :\n                <div className=\"company-news\">\n                    <h1>Loading...</h1>\n                    <h1>Or Unavailable</h1>\n                </div>\n        );\n    }\n}\n\n\nexport default CompanyNews;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ResearchPageCompanyOverview.css';\nimport CompanyOverview from \"../../Components/CompanyOverview/CompanyOverview.js\";\nimport CompanyNews from \"../../Components/CompanyNews/CompanyNews.js\";\n\nfunction ResearchPageCompanyOverview({ tickerSymbol }) {\n\n    const [ticker] = useState(tickerSymbol)\n    const [stats, setStats] = useState()\n    const [isLoaded, setLoaded] = useState(false)\n\n    useEffect(() => {\n        (async () => {\n            let mounted = true\n            if (mounted) {\n                var sandboxMode = true\n                var baseURL\n                var token\n                const keyStats = `/stock/${ticker}/stats/companyname?&token=`\n\n                if (sandboxMode) {\n                    baseURL = 'https://sandbox.iexapis.com/v1'\n                    token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n                }\n                else {\n                    baseURL = 'https://cloud.iexapis.com/v1'\n                    token = 'pk_2d87808402a3463ab504dac6eb52b540'\n                }\n\n                const keyStatsURL = baseURL + keyStats + token\n                const statsResult = await axios.get(keyStatsURL, {transformRequest: (data, headers) => {\n                    delete headers.common['Authorization'];\n                  }\n                });\n                setStats(statsResult.data)\n                setLoaded(true)\n\n\n            }\n            return () => mounted = false;\n        })();\n    }, [ticker]);\n\n    return (\n        isLoaded ?\n            <div className=\"research-page-company-overview\">\n                    <CompanyNews tickerSymbol={ticker} />\n                    <CompanyOverview tickerSymbol={ticker} />\n            </div>\n            :\n            <div>\n                <h1>Income Statement</h1>\n                <h1>Loading...</h1>\n                <h1>Or Unavailable</h1>\n            </div>\n    );\n}\n\nexport default ResearchPageCompanyOverview;\n","import React from 'react';\n\nconst Form = ({ getStock }) => (\n    <div className=\"load-company\">\n        <form onSubmit={getStock}>\n            <input className=\"form_inputs\" type=\"text\" name=\"stockName\" placeholder=\"Enter Ticker Symbol\"/>\n            <button className=\"form_buttons\"> Enter </button>\n        </form>\n    </div> \n);\nexport default Form;","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport ResearchHeader from '../../Components/ResearchHeader/ResearchHeader.js';\nimport Financials from '../../WebPages/ResearchPage/ResearchPageFinancials';\nimport Stats from '../../WebPages/ResearchPage/ResearchPageStats';\nimport Dividends from '../../WebPages/ResearchPage/ResearchPageDividends';\nimport PriceChart from '../../WebPages/ResearchPage/ResearchPagePriceChart';\nimport CompanyOverview from '../../WebPages/ResearchPage/ResearchPageCompanyOverview';\nimport Form from './Form.js'\nimport './ResearchPage.css';\n\nclass ResearchPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tickerSymbol: 'AAPL',\n            price: 0,\n            keyStats: [{}],\n            isLoaded: false\n        }\n    }\n\n    componentDidUpdate(prevProps,prevState) {\n        if (prevState.tickerSymbol !== this.state.tickerSymbol) {\n\n\n            var sandboxMode = true\n            var baseURL\n            var token\n            const keyStats = `/stock/${this.state.tickerSymbol}/stats/?&token=`\n            const price = `/stock/${this.state.tickerSymbol}/price?&token=`\n\n\n            if (sandboxMode) {\n                baseURL = 'https://sandbox.iexapis.com/v1'\n                token = 'Tpk_a909e54fc2ab44ac976155957da2a605'\n            }\n            else {\n                baseURL = 'https://cloud.iexapis.com/v1'\n                token = 'pk_2d87808402a3463ab504dac6eb52b540'\n            }\n\n            const keyStatsURL = baseURL + keyStats + token\n            const priceURL = baseURL + price + token\n\n            fetch(keyStatsURL)\n                .then(response => response.json())\n                .then(data => this.setState({ keyStats: data, isLoaded: true }))\n            fetch(priceURL)\n                .then(response => response.json())\n                .then(data => this.setState({ price: data }))\n                .then(console.log(price))           \n        }\n    }\n    shouldComponentUpdate(nextState) {\n        if (this.state.tickerSymbol === nextState.tickerSymbol) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    getStock = async (e) => {\n\n        const stock = e.target.stockName.value;\n        e.preventDefault();\n\n        this.setState({\n            tickerSymbol: stock.toUpperCase()\n        })\n        console.log(this.state.tickerSymbol)\n    }\n       \n    \n    render() {\n        return (\n            <div>\n                <div className=\"ticker-search-background\">\n                    <div className=\"ticker-search\">\n                        <Form getStock={this.getStock} />\n                    </div>\n                </div>\n                <ResearchHeader name={this.state.keyStats.companyName} price={this.state.price} tickerSymbol={this.state.tickerSymbol} marketcap={this.state.keyStats.marketcap} />\n                    <BrowserRouter>\n                        <div className=\"research-links\">\n                            <Link to=\"/ResearchPageFinancials\" className=\"research-link\">Financials</Link>\n                            <Link to=\"/ResearchPageStats\" className=\"research-link\">EPS</Link>\n                            <Link to=\"/ResearchPageDividends\" className=\"research-link\">Dividends</Link>\n                            <Link to=\"/ResearchPagePriceChart\" className=\"research-link\">Price Chart</Link>\n                            <Link to=\"/ResearchPageCompanyOverview\" className=\"research-link\">Company Overview</Link>\n                        </div>\n                    <Switch>\n                        <Redirect from=\"/ResearchPage\" to=\"/ResearchPageFinancials\"/>\n                        <Route path=\"/ResearchPageFinancials\" component={() => <Financials tickerSymbol={this.state.tickerSymbol} />} />\n                        <Route path=\"/ResearchPageStats\" component={() => <Stats tickerSymbol={this.state.tickerSymbol} />} />\n                        <Route path=\"/ResearchPageDividends\" component={() => <Dividends tickerSymbol={this.state.tickerSymbol} />} />\n                        <Route path=\"/ResearchPagePriceChart\" component={() => <PriceChart tickerSymbol={this.state.tickerSymbol} />} />\n                        <Route path=\"/ResearchPageCompanyOverview\" component={() => <CompanyOverview tickerSymbol={this.state.tickerSymbol} />} />\n                    </Switch>\n                    </BrowserRouter>\n                </div>\n               \n            )\n    }\n}\nexport default ResearchPage","import React, {useState, useRef} from \"react\";\nimport './InvestingTermCard.css';\n\n\nfunction InvestingTermCard(props) {\n    const [isOpen, setIsOpen] = useState(false);\n    const parentRef = useRef();\n    return (\n        <div className=\"investing-term-card\">\n                <button className=\"toggle\" onClick={() => setIsOpen(!isOpen)}>\n                {props.label}\n            </button>\n            <div className=\"content-parent\"\n                ref={parentRef}\n                style={isOpen ? { height: parentRef.current.scrollHeight + \"px\" } : { height: \"0px\" }}>\n                <div className=\"content\">{props.children}</div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default InvestingTermCard;","import React from 'react';\nimport './LearnPage.css';\nimport InvestingTermCard from \"../../Components/InvestingTerms/InvestingTermCard.js\";\n\nfunction LearnPage() {\n    return (\n        <div className=\"learn-page\">\n            <div className=\"learn-banner\">\n                <h1 className=\"learn-banner-title\">Learn About Investing</h1>\n            </div>\n            <div className=\"learn-page-column-container\">\n                <div className=\"learn-page-row-container\">\n                    <div className=\"learn-page-column-container\">\n                        <InvestingTermCard label=\"What is the stock market?\">\n                            <p>The stock market is where buyers and sellers come together to trade shares in eligible companies.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"What is an investment?\">\n                            <p>An investment is an asset bought by an individual or organization with the expectation that\n                                it will generate some future income or profit. Examples of investments may include stocks and real estate.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Why should I care about investing?\">\n                            <p>Investing has the potential to help build wealth more effectively than using a savings account.\n                               The sooner you invest, the longer you give your money the chance to grow.\n                                Keeping your money in a savings account does not help it grow and it loses value due to inflation.\n                              Compounding returns is the idea that growth drives more growth which can help your money accumulate at a faster rate.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Inflation\">\n                            <p>Inflation is a general rise in the price level of an economy over a period of time.\n                               When the general price level rises, each unit of currency buys fewer goods and services.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Marketcap\">\n                            <p>Market cap refers to the\n                            total dollar market value of a company's\n                            outstanding shares of stock. It is\n                            calculated by multiplying the total\n                            number of a company's outstanding shares\n                               by the current market price of one share.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"EPS\">\n                            <p>Earnings per share is the monetary value of earnings per outstanding share of common stock for a company.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Common Stock\">\n                            <p>Common stock is a form of corporate equity ownership, a type of security.\n                                The terms voting share and ordinary share are also used frequently outside of the United States.\n                                They are known as equity shares or ordinary shares in the UK and other Commonwealth realms.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Cash\">\n                            <p>A cash investment is a short-term obligation, usually fewer than 90 days, that provides a return in the form of interest payments.\n                                Cash investments generally offer a low return compared to other investments.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Bear Market   \">\n                            <p>A bear market is a period where stock prices are falling. </p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Bull Market   \">\n                            <p>A bull market when the market is moving in a positive direction and is expected to continue.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Capital Gain (or Loss)   \">\n                            <p>This is the difference between what you bought an investment for and what you sell it for.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Balance sheet   \">\n                            <p>A statement showing what a company owns, as well as the liabilities the company has and stating the outstanding shareholder equity.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Recession\">\n                            <p>A recession is defined as two consecutive quarters when a country sees negative economic activity. </p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Blue Chip\">\n                            <p>A company that has a history of solid earnings, regular and increasing dividends, and an impeccable balance sheet.</p>\n                        </InvestingTermCard>\n                    </div>\n                    <div className=\"learn-page-column-container\">\n                        <InvestingTermCard label=\" Where can I begin to invest? \">\n                            <p>Some popular and easy to use investment applications include Robinhood and Fidelity.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Steps to do before you begin investing. \">\n                            <p>1. Set Goals.\n                               2. Pay off all high interest debt.\n                               3. Create an emergecy fund. </p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"How do I know in what I should invest my money in?\">\n                            <p>Begin by investing in index funds to learn the basics of investing.\n                                Index funds are passively managed and have lower fees than actively managed funds, and often generate higher investment returns.\n                                Index funds are well-diversified investments.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"PE Ratio\">\n                            <p>The price-earnings ratio,\n                                also known as P/E ratio, P/E, or PER,\n                                is the ratio of a company's share price to the company's earnings per share.\n                                The ratio is used for valuing companies and to find out whether\n                                they are overvalued or undervalued.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Dividend\">\n                            <p>A sum of money paid regularly (typically quarterly)\n                            by a company to its shareholders out of its profits (or reserves).</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Perferred Stock\">\n                            <p>Preferred stock is a component of share capital which may have any combination\n                                of features not possessed by common stock including properties of both an equity and a debt instrument,\n                                and is generally considered a hybrid instrument.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Bond\">\n                            <p>A bond is a fixed income instrument that represents\n                                a loan made by an investor to a borrower (typically corporate or governmental). A bond could be thought of as an I.O.U.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"What is the difference of preferred stock vs common stock?\">\n                            <p>The main difference between preferred and common stock is that preferred stock gives no voting rights to shareholders while common stock does.\n                                Preferred shareholders have priority over a company's income, meaning they are paid dividends before common shareholders.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Current Ratio\">\n                            <p>Tells you whether a company has enough current assests to pay its bills for the years(current liabilities).\n                                Usually a good current ration is in line or slightly above the industry average.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Book Value\">\n                            <p>Total value of a Company's assets that you, the owner, will receive if the company was liquidated.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\" PEG Ratio  \">\n                            <p>Price to earnings growth ratio(PE ratio/Earnings growth rate). Usually if a company is doing well PE ratio will be high which typically scares away investors.\n                               The PEG ratio will let you know if a company is undervalued. The lower the PEG ratio the more likely it's undervalued. </p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Asset\">\n                            <p>Anything of value that can be traded.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"The S&P 500   \">\n                            <p>The S&P 500 is an index compiled of the 500 best stocks currently in the market.\n                            In general, the S&P is a measure of how the stock market is doing.</p>\n                        </InvestingTermCard>\n                        <InvestingTermCard label=\"Earnings Per Share\">\n                            <p>Earnings per share are the net earnings of the company divided by the number of shares in the company.</p>\n                        </InvestingTermCard>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default LearnPage;","import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    console.log(`Adding ${token} to Authorization`);\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n      // Set token to localStorage\n      const { token } = res.data;\n      // localStorage.setItem(\"jwtToken\", token);\n      localStorage.setItem(\"jwtToken\", JSON.stringify(token));\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","export default __webpack_public_path__ + \"static/media/stonks-drawn.2ec284e0.png\";","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport drawing from \"../../stonks-drawn.png\"\nclass AccountPage extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\nrender() {\n    const { user } = this.props.auth;\nreturn (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        \n          \n            <h4>\n              <b style={{color: 'black'}}> Welcome back, {user.name.split(\" \")[0]}</b> \n              <p className=\"info\">\n                <span style={{ fontFamily: 'Lato', color: \"black\" }}>We're happy to know you've been stonking smarter.</span>\n              </p>\n            </h4>\n            <img src={drawing}></img>\n            \n\n\n\n\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\",\n                \n              }}\n              onClick={this.onLogoutClick}\n              className=\"logout-button\"\n            >\n              Logout\n            </button>\n          \n        \n      </div>\n    );\n  }\n}\nAccountPage.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(AccountPage);","import {React, Component} from 'react';\nimport './Login.css';\nimport { NavLink } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        // If logged in and user navigates to Login page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n          this.props.history.push(\"/AccountPage\");\n        }\n      }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n          this.props.history.push(\"/HomePage\"); // push user to dashboard when they login\n        }\n        if (nextProps.errors) {\n          this.setState({\n            errors: nextProps.errors\n          });\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value});\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        this.props.loginUser(userData);\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"banner\">\n                    <h1 className=\"stonk-smarter\">Stonk smarter</h1>\n                    <h2 className=\"welcome\">Welcome to Wallstreet Stonks</h2>\n                </div>\n                <div className=\"login-window\">\n                    <h2 className=\"login\">Log In</h2>\n                    <form noValidate onSubmit={this.onSubmit}>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            onChange={this.onChange}\n                            value={this.state.email}\n                            error={errors.email}\n                            id=\"email\"\n                            type=\"email\"\n                            className={classnames(\"\", {\n                                invalid: errors.email || errors.emailnotfound\n                            })}\n                        />\n                        <span className=\"red-text\" style={{color: \"red\"}}>\n                            {errors.email}\n                            {errors.emailnotfound}\n                        </span>\n                        \n                        \n                    </div>\n                    <div className=\"input-field\">\n                        \n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                        onChange={this.onChange}\n                        value={this.state.password}\n                        error={errors.password}\n                        id=\"password\"\n                        type=\"password\"\n                        className={classnames(\"\", {\n                            invalid: errors.password || errors.passwordincorrect\n                        })}\n                        />\n                        <span className=\"red-text\" style={{color: \"red\"}}>\n                            {errors.password}\n                            {errors.passwordincorrect}\n                        </span>\n                    </div>\n                    <div className=\"submit-button-div\">\n                        <button                        \n                            type=\"submit\"\n                            className=\"submit-button\"\n                        >\n                        Submit\n                        </button>\n                    </div>\n                    </form>\n                    <p className=\"grey-text text-darken-1\">\n                        Don't have an account? <Link to=\"/SignUp\">Register</Link>\n                    </p>\n                </div>\n                \n            </div>\n        )}\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n  \nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { loginUser }\n)(Login);","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport \"./SignUp.css\"\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/AccountPage\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n    };\n    this.props.registerUser(newUser, this.props.history);   \n  };\n\n  \n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"banner\">\n            <h1 className=\"stonk-smarter\">Stonk smarter</h1>\n            <h2 className=\"welcome\">Welcome to Wallstreet Stonks</h2>\n        </div>\n        <div className=\"signup-window\">\n          <div className=\"col s8 offset-s2\">\n          <h2 className=\"login\">Sign Up</h2>\n            {/* <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div> */}\n            <form noValidate onSubmit={this.onSubmit} className=\"signup-form\">\n              <div className=\"input-field\">\n                \n                <label htmlFor=\"name\">Name</label>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <span className=\"red-text\">{errors.name}</span>\n                \n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <span className=\"red-text\">{errors.email}</span>\n                \n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <span className=\"red-text\">{errors.password}</span>\n                \n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <span className=\"red-text\">{errors.password2}</span>\n                \n              </div>\n              <div className=\"already\">\n              \n              <p>\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n              <div className=\"submit-button-div\">\n                <button\n                  \n                  type=\"submit\"\n                  className=\"submit-button\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSignUp.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(SignUp));\n\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport { Route, NavLink, BrowserRouter, Redirect, Switch } from 'react-router-dom';\nimport HomePage from '../../WebPages/HomePage/HomePage';\nimport ResearchPage from '../../WebPages/ResearchPage/ResearchPage';\nimport LearnPage from '../../WebPages/LearnPage/LearnPage';\nimport './SideNav.css'\nimport AccountPage from '../../WebPages/AccountPage/AccountPage';\nimport Login from '../../WebPages/LoginPage/Login';\n// import SignUp from '../../WebPages/SignUpPage/SignUp';\nimport SignUp from '../../WebPages/SignUpPage/SignUp';\nimport PrivateRoute from \"../PrivateRoute/PrivateRoute\"\n\n\nclass SideNav extends React.Component {\n    showSettings(event) {\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <Menu>\n                    <NavLink to=\"/HomePage\" className=\"menu-item\">Home</NavLink>\n                    <NavLink to=\"/ResearchPage\" className=\"menu-item\">Research</NavLink>\n                    <NavLink to=\"/LearnPage\" className=\"menu-item\">Learn</NavLink>\n                    <NavLink to=\"/AccountPage\" className=\"menu-item\">Account</NavLink>\n                    <NavLink to=\"/Login\" className=\"menu-item\">Login</NavLink>\n                    {/* <NavLink to=\"/SignUp\" className=\"menu-item\">Sign Up</NavLink> */}\n                </Menu>\n                <div className=\"content\">\n                    <Redirect from=\"/\" to=\"/HomePage\" />\n                    <Route path=\"/HomePage\" component={HomePage} />\n                    <Route path=\"/ResearchPage\" component={ResearchPage} />\n                    <Route path=\"/LearnPage\" component={LearnPage} />\n                    {/* <Route path=\"/AccountPage\" component={AccountPage} /> */}\n                    <Route path=\"/Login\" component={Login} />\n                    <Route path=\"/SignUp\" component={SignUp} />\n                    <Switch>\n                        <PrivateRoute exact path=\"/AccountPage\" component={AccountPage} />\n                    </Switch>\n                </div>\n            </BrowserRouter>\n            )\n    }\n}\n\nexport default SideNav;","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"../actions/types\";\n  \n\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});","// // store.js should be\n// import { createStore, applyMiddleware, compose } from 'redux';\n// import thunk from 'redux-thunk';\n// import rootReducer from './reducers';\n\n// const initialState = {};\n// const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// const store = createStore(\n//     rootReducer,\n//     initialState,\n//     composeEnhancer(applyMiddleware(thunk))\n// );\n\n// export default store;\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport NavBar from \"./Components/NavBar/NavBar.js\";\nimport SideNav from \"./Components/SideNav/SideNav.js\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\n// implementing Redux for user auth\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n\nconsole.log(`localStorage.jwtToken: ${localStorage.jwtToken}`);\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n    // Set auth token header auth\n    // const token = localStorage.jwtToken;\n    const token = JSON.parse(localStorage.jwtToken);\n    setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser());\n      // Redirect to login\n      window.location.href = \"./login\";\n    }\n}\n  \n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div className=\"app\">\n                <NavBar />\n                <SideNav />\n                <Router>\n                    <Switch>\n                        <Route path=\"/\"> \n                            <Redirect to=\"/HomePage\" />\n                        </Route>\n                    </Switch>\n                </Router>\n            </div>\n        </Provider>\n        \n            // <div className=\"app\">\n            //     <NavBar />\n            //     <SideNav />\n            //     <Router>\n            //         <Switch>\n            //             <Route path=\"/\"> \n            //                 <Redirect to=\"/HomePage\" />\n            //             </Route>\n            //         </Switch>\n            //     </Router>\n            // </div>\n        \n    );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}